{"version":3,"file":"index.js","sources":["src/index.js"],"sourcesContent":["/*!\n *  obj-digger\n * ------------ ---- -  *\n *  Safely access properties of deeply nested objects\n *  @author Satoshi Soma (https://amekusa.com)\n * =================================================== *\n *\n *  MIT License\n *\n *  Copyright (c) 2022 Satoshi Soma\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"Software\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in all\n *  copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *  SOFTWARE.\n *\n */\n\nfunction isDiggable(x) {\n\tswitch (typeof x) {\n\tcase 'object':\n\tcase 'function':\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nfunction error(throws, msg, name, info) {\n\tlet r = new Error(msg);\n\tif (name) r.name = name;\n\tif (info) r.info = info;\n\tif (throws) throw r;\n\treturn r;\n}\n\nfunction dig(obj, path, opts = {}) {\n\tlet r = { path: [] };\n\tif (!isDiggable(obj)) {\n\t\tr.err = error(opts.throw, `argument is not diggable`, 'InvalidArgument', { value: obj });\n\t\treturn r;\n\t}\n\tlet p = Array.isArray(path) ? path : path.split('.');\n\tr.path.push(obj);\n\n\tfor (let i = 0;; i++) {\n\t\tlet iP = p[i];\n\n\t\tif (iP == '*') { // wildcard\n\t\t\tr.results = [];\n\t\t\tlet pRest = p.slice(i + 1);\n\t\t\tlet keys = Object.keys(obj);\n\t\t\tfor (let j = 0; j < keys.length; j++) {\n\t\t\t\tif (isDiggable(obj[keys[j]])) r.results.push(dig(obj[keys[j]], pRest, opts)); // recursion\n\t\t\t}\n\t\t\treturn r;\n\t\t}\n\n\t\tif (iP.endsWith('[]')) { // array access\n\t\t\tiP = iP.substring(0, iP.length - 2);\n\t\t\tif (iP in obj) {\n\t\t\t\tif (!Array.isArray(obj[iP])) { // not an array\n\t\t\t\t\tr.err = error(opts.throw, `property '${iP}' is not an array`, 'TypeMismatch', {\n\t\t\t\t\t\tpath: r.path,\n\t\t\t\t\t\tkey: iP, value: obj[iP],\n\t\t\t\t\t\texpectedType: 'Array'\n\t\t\t\t\t});\n\t\t\t\t\treturn r;\n\t\t\t\t}\n\t\t\t\t// dig each elements in the array\n\t\t\t\tr.path.push(obj[iP]);\n\t\t\t\tr.results = [];\n\t\t\t\tlet pRest = p.slice(i + 1);\n\t\t\t\tfor (let j = 0; j < obj[iP].length; j++) {\n\t\t\t\t\tif (isDiggable(obj[iP][j])) r.results.push(dig(obj[iP][j], pRest, opts)); // recursion\n\t\t\t\t}\n\t\t\t\treturn r;\n\t\t\t}\n\t\t\t// path not found\n\t\t\tr.err = error(opts.throw, `property '${iP}' is not found`, 'NoSuchKey', {\n\t\t\t\tpath: r.path,\n\t\t\t\tkey: iP\n\t\t\t});\n\t\t\treturn r;\n\t\t}\n\n\t\tif (iP in obj) { // path found\n\t\t\tif (i == p.length - 1) { // destination\n\t\t\t\tif ('set'    in opts) obj[iP] = opts.set;\n\t\t\t\tif ('mutate' in opts) obj[iP] = opts.mutate(obj[iP]);\n\t\t\t\tr.found = obj[iP];\n\t\t\t\treturn r;\n\t\t\t}\n\t\t\tif (isDiggable(obj[iP])) { // dig\n\t\t\t\tobj = obj[iP];\n\t\t\t\tr.path.push(obj);\n\n\t\t\t} else { // not diggable\n\t\t\t\tr.err = error(opts.throw, `property '${iP}' is not an object`, 'TypeMismatch', {\n\t\t\t\t\tpath: r.path,\n\t\t\t\t\tkey: iP, value: obj[iP],\n\t\t\t\t\texpectedType: 'object'\n\t\t\t\t});\n\t\t\t\treturn r;\n\t\t\t}\n\n\t\t} else if (opts.makePath) { // make path\n\t\t\tfor (;; i++) {\n\t\t\t\tiP = p[i];\n\t\t\t\tif (i == p.length - 1) { // destination\n\t\t\t\t\tobj[iP] = ('set' in opts) ? opts.set : opts.default;\n\t\t\t\t\tif ('mutate' in opts) obj[iP] = opts.mutate(obj[iP]);\n\t\t\t\t\tr.found = obj[iP];\n\t\t\t\t\treturn r;\n\t\t\t\t}\n\t\t\t\t// make the rest of the path\n\t\t\t\tobj[iP] = (opts.makePath === true) ? {} : opts.makePath(obj, iP, i);\n\t\t\t\tobj = obj[iP];\n\t\t\t\tr.path.push(obj);\n\t\t\t}\n\n\t\t} else { // path not found\n\t\t\tr.err = error(opts.throw, `property '${iP}' is not found`, 'NoSuchKey', {\n\t\t\t\tpath: r.path,\n\t\t\t\tkey: iP\n\t\t\t});\n\t\t\treturn r;\n\t\t}\n\t}\n}\n\nexport default dig;\n"],"names":[],"mappings":"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"}